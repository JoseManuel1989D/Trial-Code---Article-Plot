# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YsxtOZPPyrgv7Ba78BZ7QWn6wagc4CcL
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator

# Datos simulados para el ejemplo
magnitudes = np.linspace(20, 28, 100)
completitud = np.exp(-0.5 * (magnitudes - 25)**2 / 2**2)  # Ejemplo de curva de completitud

# Función de luminosidad (LF)
luminosidades = np.linspace(-24, -16, 100)
lf_predicha = 1e-3 * np.exp(-0.4 * (luminosidades + 20))
lf_observada = 0.8 * lf_predicha + 0.0005 * np.random.randn(100)

# Datos observacionales
lf_observacional = 1e-3 * np.exp(-0.4 * (luminosidades + 19.5)) + 0.0007 * np.random.randn(100)
z_distribution = np.random.normal(3.25, 0.15, 1000)

# Creación de la figura y los subpaneles
fig, ax1 = plt.subplots(figsize=(10, 8))

# Subpanel superior: Completitud
ax1.plot(magnitudes, completitud, 'r-', linewidth=2, label='Completitud Predicha')
ax1.set_xlabel('Magnitud Aparente')
ax1.set_ylabel('Completitud')
ax1.set_ylim(0, 1.1)
ax1.set_xlim(20, 28)
ax1.xaxis.set_major_locator(MultipleLocator(2))
ax1.yaxis.set_major_locator(MultipleLocator(0.2))
ax1.legend(loc='lower left')
ax1.set_title('Completitud Predicha y Función de Luminosidad')

# Panel Principal: Función de Luminosidad
ax2 = ax1.twinx()
ax2.plot(luminosidades, lf_predicha, 'k-', linewidth=2, label='LF Predicha')
ax2.plot(luminosidades, lf_observada, 'r--', linewidth=2, label='LF con Cortes')
ax2.scatter(luminosidades, lf_observacional, color='green', marker='o', label='Datos Observacionales')
ax2.set_ylabel('Función de Luminosidad (LF)')
ax2.set_yscale('log')
ax2.set_xlim(-24, -16)
ax2.set_ylim(1e-5, 1e-1)
ax2.xaxis.set_major_locator(MultipleLocator(2))
ax2.legend(loc='upper right')

# Inset: Distribución de Corrimientos al Rojo
inset_ax = fig.add_axes([0.55, 0.5, 0.3, 0.3])
inset_ax.hist(z_distribution, bins=30, color='grey', alpha=0.7)
inset_ax.set_xlabel('Corrimiento al Rojo (z)')
inset_ax.set_ylabel('Número de Galaxias')
inset_ax.set_xlim(3, 3.5)
inset_ax.set_title('Distribución de z Seleccionadas')

plt.show()